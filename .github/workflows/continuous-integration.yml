name: Continuous Integration

on: [push]

jobs:
  install:
    name: Install Dependencies
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache Node Modules
        uses: actions/cache@v1
        id: cache-node-module
        with:
          path: node_modules
          key: ${{ runner.OS }}-node-modules-1-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-node-modules-1-
      - name: Install dependencies
        if: steps.cache-node-module.outputs.cache-hit != 'true'
        run: yarn --frozen-lockfile
  quality:
    name: Quality
    needs: [install]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache Node Modules
        uses: actions/cache@v1
        id: cache-node-module
        with:
          path: node_modules
          key: ${{ runner.OS }}-node-modules-1-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-node-modules-1-

      # Test
      - name: Test the source code
        run: yarn test:coverage

      # SonarQube (need the coverage report)
      - name: Setup SonarQube
        uses: warchant/setup-sonar-scanner@v1
      - name: Run SonarQube
        env:
          # to get access to secrets.SONAR_TOKEN, provide GITHUB_TOKEN
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: sonar-scanner
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
            -Dsonar.organization=fabiencrassat-github
            -Dsonar.host.url=https://sonarcloud.io/
            -Dsonar.projectKey=cv-with-nuxt
  lint:
    name: Lint
    needs: [install]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache Node Modules
        uses: actions/cache@v1
        id: cache-node-module
        with:
          path: node_modules
          key: ${{ runner.OS }}-node-modules-1-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-node-modules-1-
      - name: Lint the source code
        run: yarn lint
  build:
    name: build
    needs: [install]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache Node Modules
        uses: actions/cache@v1
        id: cache-node-module
        with:
          path: node_modules
          key: ${{ runner.OS }}-node-modules-1-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-node-modules-1-
      - name: Build the app
        run: yarn build
